counts.matrix.filepath <- "C://Users//Samy//Dropbox//Samy_Dropbox//MSc//lncRNA_HOTAIRM1_Project_Dostie//jdostie-rnaseq//Qiagen//primary_analyses//QIAseqUltraplexRNA_90846//primary_analysis//QIAseqUltraplexRNA_90846_relabelled_alphaordered.csv"
keep_columns <- c(
#"EtOH_RepA",
#"NT_RepA",
#"NT_RepB",
#"NT_RepC",
#"RA_RepA",
"RA_RepB",
"RA_RepC",
"siGFP_RepA",
"siGFP_RepB",
"siGFP_RepC",
"siM1_RepA",
"siM1_RepB",
"siM1_RepC",
"siNC_RepA",
"siNC_RepB",
"siNC_RepC"
)
fdr <- 0.1
# This section contains parameters used when plotting the rejection curves obtained by repeating DESeq2's independent filtering method with a variety of user-defined filtering criteria (filtering functions)
quantiles <- seq(from=0.1, to=0.95, by=0.01)
raw.counts.data <- rawCountsMatrix_to_dataframe(
counts.matrix.filepath,
keep_columns=keep_columns,
make_histogram=TRUE, make_boxplot=TRUE,
make_ensembl_to_symbol = FALSE,
sep = ',',
verbose=TRUE
)
sample.data <- data.frame(
condition=raw.counts.data$conditions,
row.names=colnames(raw.counts.data$raw.data)
)
colnames(sample.data) <- c("condition")
contrasts <- design.pairs(unique(sample.data$condition))
dds <- DESeqDataSetFromMatrix(
countData = raw.counts.data$raw.data,
colData = sample.data,
design = ~ condition
)
plotPheatMap(dds, fromtool="deseq")
rld <- rlog(dds, blind=TRUE)
prcomp.output <- prcomp(t(assay(rld)))
plotScree(prcomp.output)
plotPC1vsPC2(prcomp.output, dds)
DESeq2.results <- DESeq2_DGE_analysis( dds, fdr, contrasts, quantiles=quantiles, verbose = FALSE, chosen_filter="mean")
dge_obj <- DGEList(
counts=raw.counts.data$raw.data,
group=raw.counts.data$conditions
)
design <- model.matrix(~0+sample.data$condition)
rownames(design) <- row.names(sample.data)
colnames(design) <- gsub("sample.data.condition","",colnames(design))
edgeR.results <- edgeR_DGE_analysis(dge_obj, design, fdr, contrasts = contrasts, verbose=FALSE, chosen_filter="mean")
prcomp.output <- prcomp(t(assay(rld)))
plotScree(prcomp.output)
plotPC1vsPC2(prcomp.output, dds)
prcomp.output <- prcomp(t(
t(t(edgeR.results$DGE_obj$pseudo.counts)*(edgeR.results$DGE_obj$samples$norm.factors))
))
plotScree(prcomp.output)
plotPC1vsPC2(prcomp.output, dds)
# see https://www.biostars.org/p/317701/#317704
prcomp.output <- prcomp(t(
t(t(edgeR.results$DGE_obj$pseudo.counts)*(edgeR.results$DGE_obj$samples$norm.factors))
))
plotScree(prcomp.output)
plotPC1vsPC2(prcomp.output, dds)
rld <- rlog(dds, blind=TRUE)
prcomp.output <- prcomp(t(assay(rld)))
plotScree(prcomp.output)
plotPC1vsPC2(prcomp.output, dds)
get.conversion.map <- function( raw.counts.data, biomart="ensembl", dataset="hsapiens_gene_ensembl",
BMattributes=c('ensembl_gene_id','external_gene_name'),
BMfilters='ensembl_gene_id',
str_replace_pattern=".[0-9]+$",
str_replace_replacement=""){
mart <- useMart(
biomart=biomart,
dataset=dataset
)
x.to.y.map <- getBM(
attributes=BMattributes,
filters=BMfilters,
values=str_replace(
rownames(raw.counts.data$raw.data),
pattern=str_replace_pattern,
replacement=str_replace_replacement
),
mart=mart
)
rownames(x.to.y.map) <- x.to.y.map$ensembl_gene_id
x.to.y.map<-subset(x.to.y.map, select=('external_gene_name'))
return(x.to.y.map)
}
mymap <- get.conversion.map(raw.counts.data)
?str_replace
library(stringr)
mymap <- get.conversion.map(raw.counts.data)
biomart<-"ensembl"
dataset<-"hsapiens_gene_ensembl"
mart <- useMart(
biomart=biomart,
dataset=dataset
)
rownames(raw.counts.data$raw.data)
str_replace_pattern<-".[0-9]+$"
str_replace(
rownames(raw.counts.data$raw.data),
pattern=str_replace_pattern,
str_replace(
rownames(raw.counts.data$raw.data),
pattern=str_replace_pattern,
replacement=""
)
dim(str_replace()
rownames(raw.counts.data$raw.data),
pattern=str_replace_pattern, replacement="")
dim(str_replace(
rownames(raw.counts.data$raw.data),
pattern=str_replace_pattern, replacement=""))
str_replace(
rownames(raw.counts.data$raw.data),
pattern=str_replace_pattern, replacement="")
getBM(
attributes=c('ensembl_gene_id','external_gene_name'),
filters='ensembl_gene_id',
values=str_replace(
rownames(raw.counts.data$raw.data),
pattern=str_replace_pattern,
replacement=str_replace_replacement
),
mart=mart
)
str_replace_replacement<-""
getBM(
attributes=c('ensembl_gene_id','external_gene_name'),
filters='ensembl_gene_id',
values=str_replace(
rownames(raw.counts.data$raw.data),
pattern=str_replace_pattern,
replacement=str_replace_replacement
),
mart=mart
)
mart <- useMart(
biomart=biomart,
dataset=dataset,
host = "www.ensembl.org",
ensemblRedirect = FALSE
)
getBM(
attributes=c('ensembl_gene_id','external_gene_name'),
filters='ensembl_gene_id',
values=str_replace(
rownames(raw.counts.data$raw.data),
pattern=str_replace_pattern,
replacement=str_replace_replacement
),
mart=mart
)
mart <- useMart(
biomart=biomart,
dataset=dataset
)
getBM(
attributes=c('ensembl_gene_id','external_gene_name'),
filters='ensembl_gene_id',
values=str_replace(
rownames(raw.counts.data$raw.data),
pattern=str_replace_pattern,
replacement=str_replace_replacement
),
mart=mart
)
colnames(contrasts)
strsplit(contrast.name, "-")[1][[1]]
contrast.conditions <- strsplit(contrast.name, "-")[1][[1]]
relevant.columns <- lapply(contrast.conditions, grepl, colnames(raw.counts.data$raw.data))
relevant.columns <- sapply(transpose(relevant.columns), any) # column-wise OR
relevant.columns <- colnames(raw.counts.data$raw.data)[relevant.columns] # from indices to names
relevant.raw.data <- raw.counts.data$raw.data[relevant.columns]
relevant.columns
dim(relevant.raw.data)
colnames(relevant.raw.data)
assay(DESeq2.results$DGE_obj)
colnames(assay(DESeq2.results$DGE_obj))
relevant.columns <- sapply(transpose(relevant.columns), any) # column-wise OR
contrast.conditions <- strsplit(contrast.name, "-")[[1]]
relevant.columns <- lapply(contrast.conditions, grepl, colnames(raw.counts.data$raw.data))
relevant.columns <- sapply(transpose(relevant.columns), any) # column-wise OR
relevant.columns
contrast.conditions <- strsplit(contrast.name, "-")[[1]]
relevant.columns <- lapply(contrast.conditions, grepl, colnames(raw.counts.data$raw.data))
relevant.columns.mask <- sapply(transpose(relevant.columns), any) # column-wise OR
relevant.columns <- colnames(raw.counts.data$raw.data)[relevant.columns.mask]
colnames(assay(DESeq2.results$DGE_obj))
colnames(assay(DESeq2.results$DGE_obj))[relevant.columns]
assay(DESeq2.results$DGE_obj)[relevant.columns]
assay(DESeq2.results$DGE_obj)
colnames(assay(DESeq2.results$DGE_obj))
assay(DESeq2.results$DGE_obj)[relevant.columns.mask]
colnames(assay(DESeq2.results$DGE_obj)[relevan)t.columns.mask]
colnames(assay(DESeq2.results$DGE_obj)[relevant.columns.mask])
head(assay(DESeq2.results$DGE_obj)[relevant.columns.mask])
counts(DESeq2.results$DGE_obj)
colnames(counts(DESeq2.results$DGE_obj))
head(counts(DESeq2.results$DGE_obj)[relevant.columns.mask])
`colnames(counts(DESeq2.results$DGE_obj)[relevant.columns.mask])
colnames(counts(DESeq2.results$DGE_obj)[relevant.columns.mask])
head(counts(DESeq2.results$DGE_obj))
colnames(counts(DESeq2.results$DGE_obj))
colnames(counts(DESeq2.results$DGE_obj))[relevant.columns.mask]
colnames(counts(DESeq2.results$DGE_obj, normalized=TRUE))[relevant.columns.mask]
head(counts(DESeq2.results$DGE_obj, normalized=TRUE))[relevant.columns.mask]
t(t(edgeR.results$DGE_obj$pseudo.counts)*(edgeR.results$DGE_obj$samples$norm.factors))
dim(t(t(edgeR.results$DGE_obj$pseudo.counts)*(edgeR.results$DGE_obj$samples$norm.factors)))
dim(t(t(edgeR.results$DGE_obj$pseudo.counts)*(edgeR.results$DGE_obj$samples$norm.factors)))
colnames(t(t(edgeR.results$DGE_obj$pseudo.counts)*(edgeR.results$DGE_obj$samples$norm.factors)))
t(
t(edgeR.results$DGE_obj$pseudo.counts)*(edgeR.results$DGE_obj$samples$norm.factors)
)[relevant.columns.mask]
colnames(t(
t(edgeR.results$DGE_obj$pseudo.counts)*(edgeR.results$DGE_obj$samples$norm.factors)
)[relevant.columns.mask])
colnames(t(
t(edgeR.results$DGE_obj$pseudo.counts)*(edgeR.results$DGE_obj$samples$norm.factors)
))[relevant.columns.mask]
contrast.name
DESeq2.results$`RA-siGFP`$IF.results
DESeq2.results$`RA-siGFP`$IF.metadata
source("C:/Users/Samy/Dropbox/Samy_Dropbox/MSc/lncRNA_HOTAIRM1_Project_Dostie/jdostie-rnaseq/Qiagen/primary_analyses/QIAseqUltraplexRNA_90846/secondary_analysis/DGEA_modularized/R_code/all_code.R")
counts.matrix.filepath <- "C://Users//Samy//Dropbox//Samy_Dropbox//MSc//lncRNA_HOTAIRM1_Project_Dostie//jdostie-rnaseq//Qiagen//primary_analyses//QIAseqUltraplexRNA_90846//primary_analysis//QIAseqUltraplexRNA_90846_relabelled_alphaordered.csv"
keep_columns <- c(
#"EtOH_RepA",
#"NT_RepA",
#"NT_RepB",
#"NT_RepC",
#"RA_RepA",
"RA_RepB",
"RA_RepC",
"siGFP_RepA",
"siGFP_RepB",
"siGFP_RepC",
"siM1_RepA",
"siM1_RepB",
"siM1_RepC",
"siNC_RepA",
"siNC_RepB",
"siNC_RepC"
)
fdr <- 0.1
# This section contains parameters used when plotting the rejection curves obtained by repeating DESeq2's independent filtering method with a variety of user-defined filtering criteria (filtering functions)
quantiles <- seq(from=0.1, to=0.95, by=0.01)
raw.counts.data <- rawCountsMatrix_to_dataframe(
counts.matrix.filepath,
keep_columns=keep_columns,
make_histogram=TRUE, make_boxplot=TRUE,
make_ensembl_to_symbol = FALSE,
sep = ',',
verbose=TRUE
)
sample.data <- data.frame(
condition=raw.counts.data$conditions,
row.names=colnames(raw.counts.data$raw.data)
)
colnames(sample.data) <- c("condition")
contrasts <- design.pairs(unique(sample.data$condition))
dds <- DESeqDataSetFromMatrix(
countData = raw.counts.data$raw.data,
colData = sample.data,
design = ~ condition
)
plotPheatMap(dds, fromtool="deseq")
rld <- rlog(dds, blind=TRUE)
prcomp.output <- prcomp(t(assay(rld)))
plotScree(prcomp.output)
plotPC1vsPC2(prcomp.output, dds)
DESeq2.results <- DESeq2_DGE_analysis( dds, fdr, contrasts, quantiles=quantiles, verbose = FALSE, chosen_filter="mean")
dge_obj <- DGEList(
counts=raw.counts.data$raw.data,
group=raw.counts.data$conditions
)
design <- model.matrix(~0+sample.data$condition)
rownames(design) <- row.names(sample.data)
colnames(design) <- gsub("sample.data.condition","",colnames(design))
edgeR.results <- edgeR_DGE_analysis(dge_obj, design, fdr, contrasts = contrasts, verbose=FALSE, chosen_filter="mean")
# see https://www.biostars.org/p/317701/#317704
prcomp.output <- prcomp(t(
t(t(edgeR.results$DGE_obj$pseudo.counts)*(edgeR.results$DGE_obj$samples$norm.factors))
))
plotScree(prcomp.output)
plotPC1vsPC2(prcomp.output, dds)
symbol.to.id.map <- get.conversion.map(raw.counts.data)
symbol.to.id.map <- get.conversion.map(raw.counts.data)
symbol.to.id.map <- get.conversion.map(raw.counts.data)
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA_", getwd(), "All_RAi_except_RAsA_",
saveoutput=TRUE)
source("C:/Users/Samy/Dropbox/Samy_Dropbox/MSc/lncRNA_HOTAIRM1_Project_Dostie/jdostie-rnaseq/Qiagen/primary_analyses/QIAseqUltraplexRNA_90846/secondary_analysis/DGEA_modularized/R_code/all_code.R")
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA_", getwd(), "All_RAi_except_RAsA_",
saveoutput=TRUE)
?write.table
source("C:/Users/Samy/Dropbox/Samy_Dropbox/MSc/lncRNA_HOTAIRM1_Project_Dostie/jdostie-rnaseq/Qiagen/primary_analyses/QIAseqUltraplexRNA_90846/secondary_analysis/DGEA_modularized/R_code/all_code.R")
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA_", getwd(), "All_RAi_except_RAsA_",
saveoutput=TRUE)
source("C:/Users/Samy/Dropbox/Samy_Dropbox/MSc/lncRNA_HOTAIRM1_Project_Dostie/jdostie-rnaseq/Qiagen/primary_analyses/QIAseqUltraplexRNA_90846/secondary_analysis/DGEA_modularized/R_code/all_code.R")
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA_", getwd(), "All_RAi_except_RAsA_",
saveoutput=TRUE)
source("C:/Users/Samy/Dropbox/Samy_Dropbox/MSc/lncRNA_HOTAIRM1_Project_Dostie/jdostie-rnaseq/Qiagen/primary_analyses/QIAseqUltraplexRNA_90846/secondary_analysis/DGEA_modularized/R_code/all_code.R")
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA_", getwd(), "All_RAi_except_RAsA_",
saveoutput=TRUE)
source("C:/Users/Samy/Dropbox/Samy_Dropbox/MSc/lncRNA_HOTAIRM1_Project_Dostie/jdostie-rnaseq/Qiagen/primary_analyses/QIAseqUltraplexRNA_90846/secondary_analysis/DGEA_modularized/R_code/all_code.R")
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA_", getwd(), "All_RAi_except_RAsA_",
saveoutput=TRUE)
source("C:/Users/Samy/Dropbox/Samy_Dropbox/MSc/lncRNA_HOTAIRM1_Project_Dostie/jdostie-rnaseq/Qiagen/primary_analyses/QIAseqUltraplexRNA_90846/secondary_analysis/DGEA_modularized/R_code/all_code.R")
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA_", getwd(), "All_RAi_except_RAsA_",
saveoutput=TRUE)
source("C:/Users/Samy/Dropbox/Samy_Dropbox/MSc/lncRNA_HOTAIRM1_Project_Dostie/jdostie-rnaseq/Qiagen/primary_analyses/QIAseqUltraplexRNA_90846/secondary_analysis/DGEA_modularized/R_code/all_code.R")
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA_", getwd(), "All_RAi_except_RAsA_",
saveoutput=TRUE)
source("C:/Users/Samy/Dropbox/Samy_Dropbox/MSc/lncRNA_HOTAIRM1_Project_Dostie/jdostie-rnaseq/Qiagen/primary_analyses/QIAseqUltraplexRNA_90846/secondary_analysis/DGEA_modularized/R_code/all_code.R")
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA_", getwd(), "All_RAi_except_RAsA_",
saveoutput=TRUE)
source("C:/Users/Samy/Dropbox/Samy_Dropbox/MSc/lncRNA_HOTAIRM1_Project_Dostie/jdostie-rnaseq/Qiagen/primary_analyses/QIAseqUltraplexRNA_90846/secondary_analysis/DGEA_modularized/R_code/all_code.R")
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA_", getwd(), "All_RAi_except_RAsA_",
saveoutput=TRUE)
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA", getwd(), "All_RAi_except_RAsA_",
saveoutput=TRUE)
source("C:/Users/Samy/Dropbox/Samy_Dropbox/MSc/lncRNA_HOTAIRM1_Project_Dostie/jdostie-rnaseq/Qiagen/primary_analyses/QIAseqUltraplexRNA_90846/secondary_analysis/DGEA_modularized/R_code/all_code.R")
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA", getwd(), "All_RAi_except_RAsA_",
saveoutput=TRUE)
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA", getwd(), "All_RAi_except_RAsA_",
saveoutput=TRUE)
counts(DESeq2.results$DGE_obj, normalized=TRUE)
colnames(contrasts)
contrast.conditions <- strsplit(contrasts[0], "-")[[1]]
contrast.conditions <- strsplit(contrasts, "-")[[1]]
contrast.conditions <- strsplit(colnames(contrasts)[0], "-")[[1]]
colnames(contrasts)
colnames(contrasts)[0]
colnames(contrasts)[1]
contrast.conditions <- strsplit(colnames(contrasts)[1], "-")[[1]]
contrast.conditions
relevant.columns <- lapply(contrast.conditions, grepl, colnames(raw.counts.data$raw.data))
relevant.columns.mask <- sapply(transpose(relevant.columns), any) # column-wise OR
relevant.columns <- colnames(raw.counts.data$raw.data)[relevant.columns.mask]
relevant.columns
relevant.DESeq2.normalized.data <- counts(DESeq2.results$DGE_obj, normalized=TRUE)[relevant.columns.mask]
relevant.DESeq2.normalized.data
dim(relevant.DESeq2.normalized.data)
lenght(relevant.DESeq2.normalized.data)
length(relevant.DESeq2.normalized.data)
dim(DESeq2.results$DGE_obj)
relevant.columns
d<-as.data.matrix(counts(DESeq2.results$DGE_obj, normalized=TRUE))
d<-as_data_frame(counts(DESeq2.results$DGE_obj, normalized=TRUE))
d
d<-as_data_frame(counts(DESeq2.results$DGE_obj, normalized=TRUE))[relevant.columns.mask]
d
source("C:/Users/Samy/Dropbox/Samy_Dropbox/MSc/lncRNA_HOTAIRM1_Project_Dostie/jdostie-rnaseq/Qiagen/primary_analyses/QIAseqUltraplexRNA_90846/secondary_analysis/DGEA_modularized/R_code/all_code.R")
source("C:/Users/Samy/Dropbox/Samy_Dropbox/MSc/lncRNA_HOTAIRM1_Project_Dostie/jdostie-rnaseq/Qiagen/primary_analyses/QIAseqUltraplexRNA_90846/secondary_analysis/DGEA_modularized/R_code/all_code.R")
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA", getwd(), "All_RAi_except_RAsA",
saveoutput=TRUE)
source("C:/Users/Samy/Dropbox/Samy_Dropbox/MSc/lncRNA_HOTAIRM1_Project_Dostie/jdostie-rnaseq/Qiagen/primary_analyses/QIAseqUltraplexRNA_90846/secondary_analysis/DGEA_modularized/R_code/all_code.R")
source("C:/Users/Samy/Dropbox/Samy_Dropbox/MSc/lncRNA_HOTAIRM1_Project_Dostie/jdostie-rnaseq/Qiagen/primary_analyses/QIAseqUltraplexRNA_90846/secondary_analysis/DGEA_modularized/R_code/all_code.R")
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA", getwd(), "All_RAi_except_RAsA",
saveoutput=TRUE)
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA", getwd(), "All_RAi_except_RAsA",
saveoutput=TRUE)
source("C:/Users/Samy/Dropbox/Samy_Dropbox/MSc/lncRNA_HOTAIRM1_Project_Dostie/jdostie-rnaseq/Qiagen/primary_analyses/QIAseqUltraplexRNA_90846/secondary_analysis/DGEA_modularized/R_code/all_code.R")
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA", getwd(), "All_RAi_except_RAsA",
saveoutput=TRUE)
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA", getwd(), "All_RAi_except_RAsA",
saveoutput=TRUE)
relevant.DESeq2.normalized.data <- as.data.frame(counts(DESeq2.results$DGE_obj, normalized=TRUE))[relevant.columns.mask]
relevant.DESeq2.normalized.data
typeof(relevant.DESeq2.normalized.data)
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA", getwd(), "All_RAi_except_RAsA",
saveoutput=TRUE)
relevant.edger.normalized.data
relevant.DESeq2.normalized.data
colnames(relevant.DESeq2.normalized.data)
paste("Sub", colnames(relevant.DESeq2.normalized.data), sep = "_")
source("C:/Users/Samy/Dropbox/Samy_Dropbox/MSc/lncRNA_HOTAIRM1_Project_Dostie/jdostie-rnaseq/Qiagen/primary_analyses/QIAseqUltraplexRNA_90846/secondary_analysis/DGEA_modularized/R_code/all_code.R")
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA", getwd(), "All_RAi_except_RAsA",
saveoutput=TRUE)
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA", getwd(), "All_RAi_except_RAsA",
saveoutput=TRUE)
source("C:/Users/Samy/Dropbox/Samy_Dropbox/MSc/lncRNA_HOTAIRM1_Project_Dostie/jdostie-rnaseq/Qiagen/primary_analyses/QIAseqUltraplexRNA_90846/secondary_analysis/DGEA_modularized/R_code/all_code.R")
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA", getwd(), "All_RAi_except_RAsA",
saveoutput=TRUE)
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA", getwd(), "All_RAi_except_RAsA",
saveoutput=TRUE)
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA", getwd(), "All_RAi_except_RAsA",
saveoutput=TRUE)
source("C:/Users/Samy/Dropbox/Samy_Dropbox/MSc/lncRNA_HOTAIRM1_Project_Dostie/jdostie-rnaseq/Qiagen/primary_analyses/QIAseqUltraplexRNA_90846/secondary_analysis/DGEA_modularized/R_code/all_code.R")
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA", getwd(), "All_RAi_except_RAsA",
saveoutput=TRUE)
save.spreadsheet( DESeq2.results, edgeR.results,
raw.counts.data, contrasts,
symbol.to.id.map, fdr,
"All_RAi_except_RAsA", getwd(), "All_RAi_except_RAsA",
saveoutput=TRUE)
DESeq2.normalized.data <- as.data.frame(counts(DESeq2.results$DGE_obj, normalized=TRUE))
prcomp.output <- prcomp(DESeq2.normalized.data)
plotScree(prcomp.output)
plotPC1vsPC2(prcomp.output, dds)
DESeq2.normalized.data <- as.data.frame(counts(DESeq2.results$DGE_obj, normalized=TRUE))
prcomp.output <- prcomp(t(DESeq2.normalized.data))
plotScree(prcomp.output)
plotPC1vsPC2(prcomp.output, dds)
typeof(symbol.to.id.map)
length(symbol.to.id.map)
dim(symbol.to.id.map)
write.table(as.data.frame(symbol.to.id.map), file="ensembl_ID_gene_symbol_map.tsv", quote=FALSE, sep='\t')
tryCatch
symbol.to.id.map <- tryCatch({
get.conversion.map(raw.counts.data)
}, error = function() {
print("Caught server timeout error, using preloaded conversion file...")
return(
as.data.frame(
read.csv(
"ensembl_ID_gene_symbol_map_may2020.tsv",
sep='\t',
header=TRUE,
row.names=TRUE,
encoding='utf-8'
)
)
)
}, finally = {
print("Loaded map!")
}
)
head(symbol.to.id.map)
